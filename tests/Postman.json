{
	"info": {
		"name": "MajorPotential-API-Tests",
		"_postman_id": "d6952cd1-c6e4-492e-ade3-a18a1eb6b5ba",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Test all universities api call",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ec10199b-4b60-40c3-a0ae-978450c1fe4e",
						"type": "text/javascript",
						"exec": [
							"// ensure healthy response code",
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"// parse the response object",
							"var response = JSON.parse(responseBody);",
							"",
							"var uni_list = response.records;",
							"",
							"var total_uni = response.totalCount;",
							"",
							"var first_uni = uni_list[0];",
							"",
							"var last_uni = uni_list[total_uni - 1];",
							"",
							"// ensure the university data contains name",
							"tests[\"University data contains name\"] = first_uni.name !== null;",
							"",
							"// ensure the university data contains city",
							"tests[\"University data contains city\"] = first_uni.city !== null;",
							"",
							"// ensure the university data contains image_link",
							"tests[\"University data contains image_link\"] = first_uni.image_link !== null;",
							"",
							"// ensure the university data contains city_id",
							"tests[\"University data contains city_id\"] = first_uni.city_id !== null;",
							"",
							"// ensure the university data contains enrolled_men",
							"tests[\"University data contains enrolled_men\"] = first_uni.enrolled_men !== null;",
							"",
							"// ensure the university data contains enrolled_women",
							"tests[\"University data contains enrolled_women\"] = first_uni.enrolled_women !== null;",
							"",
							"// ensure the university data contains id",
							"tests[\"University data contains id\"] = first_uni.id !== null;",
							"",
							"// ensure the university data contains id",
							"tests[\"University data contains state\"] = first_uni.state !== null;",
							"",
							"// ensure the university data contains website",
							"tests[\"University data contains website\"] = first_uni.website !== null;",
							"",
							"// ensure the university data contains uni_type",
							"tests[\"University data contains uni_type\"] = first_uni.uni_type !== null;",
							"",
							"// ensure the university data contains oos_tuition",
							"tests[\"University data contains oos_tuition\"] = first_uni.oos_tuition !== null;",
							"",
							"// ensure the university data contains demographics_asian",
							"tests[\"University data contains demographics_asian\"] = first_uni.demographics_asian !== null;",
							"",
							"// ensure the university data contains demographics_black",
							"tests[\"University data contains demographics_black\"] = first_uni.demographics_black !== null;",
							"",
							"// ensure the university data contains survey_year",
							"tests[\"University data contains survey_year\"] = first_uni.survey_year !== null;",
							"",
							"// ensure the university data contains top_majors",
							"tests[\"University data contains top_majors\"] = first_uni.top_majors !== null;",
							"majors = first_uni.top_majors;",
							"tests[\"University data contains 5 top_majors\"] = majors.length() === 5;",
							"",
							"",
							"",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://api.majorpotential.me/universities",
					"protocol": "http",
					"host": [
						"api",
						"majorpotential",
						"me"
					],
					"path": [
						"universities"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Test single university api call",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ec10199b-4b60-40c3-a0ae-978450c1fe4e",
						"type": "text/javascript",
						"exec": [
							"// ensure healthy response code",
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"// parse the response object",
							"var response = JSON.parse(responseBody);",
							"",
							"var uni_list = response.records;",
							"",
							"var total_uni = response.totalCount;",
							"",
							"var first_uni = uni_list[0];",
							"",
							"var last_uni = uni_list[total_uni - 1];",
							"",
							"// ensure the university data contains name",
							"tests[\"University data contains name\"] = first_uni.name !== null;",
							"",
							"// ensure the university data contains city",
							"tests[\"University data contains city\"] = first_uni.city !== null;",
							"",
							"// ensure the university data contains image_link",
							"tests[\"University data contains image_link\"] = first_uni.image_link !== null;",
							"",
							"// ensure the university data contains city_id",
							"tests[\"University data contains city_id\"] = first_uni.city_id !== null;",
							"",
							"// ensure the university data contains enrolled_men",
							"tests[\"University data contains enrolled_men\"] = first_uni.enrolled_men !== null;",
							"",
							"// ensure the university data contains enrolled_women",
							"tests[\"University data contains enrolled_women\"] = first_uni.enrolled_women !== null;",
							"",
							"// ensure the university data contains id",
							"tests[\"University data contains id\"] = first_uni.id !== null;",
							"",
							"// ensure the university data contains id",
							"tests[\"University data contains state\"] = first_uni.state !== null;",
							"",
							"// ensure the university data contains website",
							"tests[\"University data contains website\"] = first_uni.website !== null;",
							"",
							"// ensure the university data contains uni_type",
							"tests[\"University data contains uni_type\"] = first_uni.uni_type !== null;",
							"",
							"// ensure the university data contains oos_tuition",
							"tests[\"University data contains oos_tuition\"] = first_uni.oos_tuition !== null;",
							"",
							"// ensure the university data contains demographics_asian",
							"tests[\"University data contains demographics_asian\"] = first_uni.demographics_asian !== null;",
							"",
							"// ensure the university data contains demographics_black",
							"tests[\"University data contains demographics_black\"] = first_uni.demographics_black !== null;",
							"",
							"// ensure the university data contains survey_year",
							"tests[\"University data contains survey_year\"] = first_uni.survey_year !== null;",
							"",
							"// ensure the university data contains top_majors",
							"tests[\"University data contains top_majors\"] = first_uni.top_majors !== null;",
							"majors = first_uni.top_majors;",
							"tests[\"University data contains 5 top_majors\"] = majors.length() === 5;",
							"",
							"",
							"",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://api.majorpotential.me/universities",
					"protocol": "http",
					"host": [
						"api",
						"majorpotential",
						"me"
					],
					"path": [
						"universities"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Test universiteis_limited api call",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ec10199b-4b60-40c3-a0ae-978450c1fe4e",
						"type": "text/javascript",
						"exec": [
							"// ensure healthy response code",
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"// parse the response object",
							"var response = JSON.parse(responseBody);",
							"",
							"var uni_list = response.records;",
							"",
							"var total_uni = response.totalCount;",
							"",
							"var first_uni = uni_list[0];",
							"",
							"var last_uni = uni_list[total_uni - 1];",
							"",
							"// ensure the university data contains name",
							"tests[\"University data contains name\"] = first_uni.name !== null;",
							"",
							"// ensure the university data contains city",
							"tests[\"University data contains city\"] = first_uni.city !== null;",
							"",
							"// ensure the university data contains image_link",
							"tests[\"University data contains image_link\"] = first_uni.image_link !== null;",
							"",
							"// ensure the university data contains city_id",
							"tests[\"University data contains city_id\"] = first_uni.city_id !== null;",
							"",
							"// ensure the university data contains enrolled_men",
							"tests[\"University data contains enrolled_men\"] = first_uni.enrolled_men !== null;",
							"",
							"// ensure the university data contains enrolled_women",
							"tests[\"University data contains enrolled_women\"] = first_uni.enrolled_women !== null;",
							"",
							"// ensure the university data contains id",
							"tests[\"University data contains id\"] = first_uni.id !== null;",
							"",
							"// ensure the university data contains id",
							"tests[\"University data contains state\"] = first_uni.state !== null;",
							"",
							"// ensure the university data contains website",
							"tests[\"University data contains website\"] = first_uni.website !== null;",
							"",
							"// ensure the university data contains uni_type",
							"tests[\"University data contains uni_type\"] = first_uni.uni_type !== null;",
							"",
							"// ensure the university data contains oos_tuition",
							"tests[\"University data contains oos_tuition\"] = first_uni.oos_tuition !== null;",
							"",
							"// ensure the university data contains demographics_asian",
							"tests[\"University data contains demographics_asian\"] = first_uni.demographics_asian !== null;",
							"",
							"// ensure the university data contains demographics_black",
							"tests[\"University data contains demographics_black\"] = first_uni.demographics_black !== null;",
							"",
							"// ensure the university data contains survey_year",
							"tests[\"University data contains survey_year\"] = first_uni.survey_year !== null;",
							"",
							"// ensure the university data contains top_majors",
							"tests[\"University data contains top_majors\"] = first_uni.top_majors !== null;",
							"majors = first_uni.top_majors;",
							"tests[\"University data contains 5 top_majors\"] = majors.length() === 5;",
							"",
							"",
							"",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://api.majorpotential.me/universities",
					"protocol": "http",
					"host": [
						"api",
						"majorpotential",
						"me"
					],
					"path": [
						"universities"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Test all cities api call",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ea31ab35-f21c-442b-822b-612986b29758",
						"type": "text/javascript",
						"exec": [
							"// ensure healthy response code",
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"// parse the response object",
							"var response = JSON.parse(responseBody);",
							"",
							"var city_list = response.records;",
							"",
							"var total_city = response.totalCount;",
							"",
							"var first_city = city_list[0];",
							"",
							"var last_city = city_list[total_city - 1];",
							"",
							"tests[\"test all the data is showing up\"] = last_city !== null;",
							"",
							"// ensure the city data contains name",
							"tests[\"city data contains name\"] = first_city.city_name !== null;",
							"",
							"// ensure the city data contains city",
							"tests[\"city data contains city\"] = first_city.city_name !== null;",
							"",
							"// ensure the city data contains image_link",
							"tests[\"city data contains image_link\"] = first_city.city_image_link !== null;",
							"",
							"// ensure the city data contains city_id",
							"tests[\"city data contains city_id\"] = first_city.id !== null;",
							"",
							"// ensure the city data contains county_id",
							"tests[\"city data contains county_id\"] = first_city.county_id !== null;",
							"",
							"// ensure the city data contains enrolled_men",
							"tests[\"city data contains high_school_graduation_rate_in_county\"] = first_city.high_school_graduation_rate_in_county !== null;",
							"",
							"// ensure the city data contains motor_vehicle_crash_deaths_in_county",
							"tests[\"city data contains motor_vehicle_crash_deaths_in_county\"] = first_city.motor_vehicle_crash_deaths_in_county !== null;",
							"",
							"// ensure the city data contains people_with_college_education_in_county",
							"tests[\"city data contains people_with_college_education_in_county\"] = first_city.people_with_college_education_in_county !== null;",
							"",
							"// ensure the city data contains population_in_county",
							"tests[\"city data contains population_in_county\"] = first_city.population_in_county !== null;",
							"",
							"// ensure the city data contains city_type",
							"tests[\"city data contains city_type\"] = first_city.city_type !== null;",
							"",
							"// ensure the city data contains primary_care_physicians_in_county",
							"tests[\"city data contains primary_care_physicians_in_county\"] = first_city.primary_care_physicians_in_county !== null;",
							"",
							"// ensure the city data contains county_name",
							"tests[\"city data contains county_name\"] = first_city.county_name !== null;",
							"",
							"// ensure the city data contains violent_crime_in_county",
							"tests[\"city data contains violent_crime_in_county\"] = first_city.violent_crime_in_county !== null;",
							"",
							"// ensure the city data contains median_household_income_in_county",
							"tests[\"city data contains median_household_income_in_county\"] = first_city.median_household_income_in_county !== null;",
							"",
							"// ensure the city data contains survey_year_in_county",
							"tests[\"city data contains survey_year_in_county\"] = first_city.survey_year_in_county!== null;",
							"",
							"// ensure the city data contains top_majors",
							"tests[\"city data contains universities_in_city\"] = first_city.universities_in_city !== null;",
							"unis = first_city.universities_in_city;",
							"",
							"tests[\"city data contains atleast one city\"] = unis !== null;",
							"",
							"",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://api.majorpotential.me/cities",
					"protocol": "http",
					"host": [
						"api",
						"majorpotential",
						"me"
					],
					"path": [
						"cities"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Test cities limited api call",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ea31ab35-f21c-442b-822b-612986b29758",
						"type": "text/javascript",
						"exec": [
							"// ensure healthy response code",
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"// parse the response object",
							"var response = JSON.parse(responseBody);",
							"",
							"var city_list = response.records;",
							"",
							"var total_city = response.totalCount;",
							"",
							"var first_city = city_list[0];",
							"",
							"var last_city = city_list[total_city - 1];",
							"",
							"tests[\"test all the data is showing up\"] = last_city !== null;",
							"",
							"// ensure the city data contains name",
							"tests[\"city data contains name\"] = first_city.city_name !== null;",
							"",
							"// ensure the city data contains city",
							"tests[\"city data contains city\"] = first_city.city_name !== null;",
							"",
							"// ensure the city data contains image_link",
							"tests[\"city data contains image_link\"] = first_city.city_image_link !== null;",
							"",
							"// ensure the city data contains city_id",
							"tests[\"city data contains city_id\"] = first_city.id !== null;",
							"",
							"// ensure the city data contains county_id",
							"tests[\"city data contains county_id\"] = first_city.county_id !== null;",
							"",
							"// ensure the city data contains enrolled_men",
							"tests[\"city data contains high_school_graduation_rate_in_county\"] = first_city.high_school_graduation_rate_in_county !== null;",
							"",
							"// ensure the city data contains motor_vehicle_crash_deaths_in_county",
							"tests[\"city data contains motor_vehicle_crash_deaths_in_county\"] = first_city.motor_vehicle_crash_deaths_in_county !== null;",
							"",
							"// ensure the city data contains people_with_college_education_in_county",
							"tests[\"city data contains people_with_college_education_in_county\"] = first_city.people_with_college_education_in_county !== null;",
							"",
							"// ensure the city data contains population_in_county",
							"tests[\"city data contains population_in_county\"] = first_city.population_in_county !== null;",
							"",
							"// ensure the city data contains city_type",
							"tests[\"city data contains city_type\"] = first_city.city_type !== null;",
							"",
							"// ensure the city data contains primary_care_physicians_in_county",
							"tests[\"city data contains primary_care_physicians_in_county\"] = first_city.primary_care_physicians_in_county !== null;",
							"",
							"// ensure the city data contains county_name",
							"tests[\"city data contains county_name\"] = first_city.county_name !== null;",
							"",
							"// ensure the city data contains violent_crime_in_county",
							"tests[\"city data contains violent_crime_in_county\"] = first_city.violent_crime_in_county !== null;",
							"",
							"// ensure the city data contains median_household_income_in_county",
							"tests[\"city data contains median_household_income_in_county\"] = first_city.median_household_income_in_county !== null;",
							"",
							"// ensure the city data contains survey_year_in_county",
							"tests[\"city data contains survey_year_in_county\"] = first_city.survey_year_in_county!== null;",
							"",
							"// ensure the city data contains top_majors",
							"tests[\"city data contains universities_in_city\"] = first_city.universities_in_city !== null;",
							"unis = first_city.universities_in_city;",
							"",
							"tests[\"city data contains atleast one city\"] = unis !== null;",
							"",
							"",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://api.majorpotential.me/cities",
					"protocol": "http",
					"host": [
						"api",
						"majorpotential",
						"me"
					],
					"path": [
						"cities"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Test single city api call",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a96fff14-35b4-4722-988d-831364c8c1d2",
						"type": "text/javascript",
						"exec": [
							"// ensure healthy response code",
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"// parse the response object",
							"var response = JSON.parse(responseBody);",
							"",
							"var city_list = response.records;",
							"",
							"var total_city = response.totalCount;",
							"",
							"var first_city = city_list[0];",
							"",
							"var last_city = city_list[total_city - 1];",
							"",
							"// ensure the city data contains name",
							"tests[\"city data contains name\"] = first_city.city_name !== null;",
							"",
							"// ensure the city data contains city",
							"tests[\"city data contains city\"] = first_city.city_name !== null;",
							"",
							"// ensure the city data contains image_link",
							"tests[\"city data contains image_link\"] = first_city.city_image_link !== null;",
							"",
							"// ensure the city data contains city_id",
							"tests[\"city data contains city_id\"] = first_city.id !== null;",
							"",
							"// ensure the city data contains county_id",
							"tests[\"city data contains county_id\"] = first_city.county_id !== null;",
							"",
							"// ensure the city data contains enrolled_men",
							"tests[\"city data contains high_school_graduation_rate_in_county\"] = first_city.high_school_graduation_rate_in_county !== null;",
							"",
							"// ensure the city data contains motor_vehicle_crash_deaths_in_county",
							"tests[\"city data contains motor_vehicle_crash_deaths_in_county\"] = first_city.motor_vehicle_crash_deaths_in_county !== null;",
							"",
							"// ensure the city data contains people_with_college_education_in_county",
							"tests[\"city data contains people_with_college_education_in_county\"] = first_city.people_with_college_education_in_county !== null;",
							"",
							"// ensure the city data contains population_in_county",
							"tests[\"city data contains population_in_county\"] = first_city.population_in_county !== null;",
							"",
							"// ensure the city data contains city_type",
							"tests[\"city data contains city_type\"] = first_city.city_type !== null;",
							"",
							"// ensure the city data contains primary_care_physicians_in_county",
							"tests[\"city data contains primary_care_physicians_in_county\"] = first_city.primary_care_physicians_in_county !== null;",
							"",
							"// ensure the city data contains county_name",
							"tests[\"city data contains county_name\"] = first_city.county_name !== null;",
							"",
							"// ensure the city data contains violent_crime_in_county",
							"tests[\"city data contains violent_crime_in_county\"] = first_city.violent_crime_in_county !== null;",
							"",
							"// ensure the city data contains median_household_income_in_county",
							"tests[\"city data contains median_household_income_in_county\"] = first_city.median_household_income_in_county !== null;",
							"",
							"// ensure the city data contains survey_year_in_county",
							"tests[\"city data contains survey_year_in_county\"] = first_city.survey_year_in_county!== null;",
							"",
							"// ensure the city data contains top_majors",
							"tests[\"city data contains top_majors\"] = first_city.top_grad_majors !== null;",
							"majors = first_city.top_grad_majors;",
							"tests[\"city data contains 5 top_majors\"] = majors.length() === 5;",
							"",
							"",
							"",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://api.majorpotential.me/cities",
					"protocol": "http",
					"host": [
						"api",
						"majorpotential",
						"me"
					],
					"path": [
						"cities"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Test all majors api call",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ea31ab35-f21c-442b-822b-612986b29758",
						"type": "text/javascript",
						"exec": [
							"// ensure healthy response code",
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"// parse the response object",
							"var response = JSON.parse(responseBody);",
							"",
							"var city_list = response.records;",
							"",
							"var total_city = response.totalCount;",
							"",
							"var first_city = city_list[0];",
							"",
							"var last_city = city_list[total_city - 1];",
							"",
							"tests[\"test all the data is showing up\"] = last_city !== null;",
							"",
							"// ensure the city data contains name",
							"tests[\"city data contains name\"] = first_city.city_name !== null;",
							"",
							"// ensure the city data contains city",
							"tests[\"city data contains city\"] = first_city.city_name !== null;",
							"",
							"// ensure the city data contains image_link",
							"tests[\"city data contains image_link\"] = first_city.city_image_link !== null;",
							"",
							"// ensure the city data contains city_id",
							"tests[\"city data contains city_id\"] = first_city.id !== null;",
							"",
							"// ensure the city data contains county_id",
							"tests[\"city data contains county_id\"] = first_city.county_id !== null;",
							"",
							"// ensure the city data contains enrolled_men",
							"tests[\"city data contains high_school_graduation_rate_in_county\"] = first_city.high_school_graduation_rate_in_county !== null;",
							"",
							"// ensure the city data contains motor_vehicle_crash_deaths_in_county",
							"tests[\"city data contains motor_vehicle_crash_deaths_in_county\"] = first_city.motor_vehicle_crash_deaths_in_county !== null;",
							"",
							"// ensure the city data contains people_with_college_education_in_county",
							"tests[\"city data contains people_with_college_education_in_county\"] = first_city.people_with_college_education_in_county !== null;",
							"",
							"// ensure the city data contains population_in_county",
							"tests[\"city data contains population_in_county\"] = first_city.population_in_county !== null;",
							"",
							"// ensure the city data contains city_type",
							"tests[\"city data contains city_type\"] = first_city.city_type !== null;",
							"",
							"// ensure the city data contains primary_care_physicians_in_county",
							"tests[\"city data contains primary_care_physicians_in_county\"] = first_city.primary_care_physicians_in_county !== null;",
							"",
							"// ensure the city data contains county_name",
							"tests[\"city data contains county_name\"] = first_city.county_name !== null;",
							"",
							"// ensure the city data contains violent_crime_in_county",
							"tests[\"city data contains violent_crime_in_county\"] = first_city.violent_crime_in_county !== null;",
							"",
							"// ensure the city data contains median_household_income_in_county",
							"tests[\"city data contains median_household_income_in_county\"] = first_city.median_household_income_in_county !== null;",
							"",
							"// ensure the city data contains survey_year_in_county",
							"tests[\"city data contains survey_year_in_county\"] = first_city.survey_year_in_county!== null;",
							"",
							"// ensure the city data contains top_majors",
							"tests[\"city data contains universities_in_city\"] = first_city.universities_in_city !== null;",
							"unis = first_city.universities_in_city;",
							"",
							"tests[\"city data contains atleast one city\"] = unis !== null;",
							"",
							"",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://api.majorpotential.me/cities",
					"protocol": "http",
					"host": [
						"api",
						"majorpotential",
						"me"
					],
					"path": [
						"cities"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Test all majors limited",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ea31ab35-f21c-442b-822b-612986b29758",
						"type": "text/javascript",
						"exec": [
							"// ensure healthy response code",
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"// parse the response object",
							"var response = JSON.parse(responseBody);",
							"",
							"var city_list = response.records;",
							"",
							"var total_city = response.totalCount;",
							"",
							"var first_city = city_list[0];",
							"",
							"var last_city = city_list[total_city - 1];",
							"",
							"tests[\"test all the data is showing up\"] = last_city !== null;",
							"",
							"// ensure the city data contains name",
							"tests[\"city data contains name\"] = first_city.city_name !== null;",
							"",
							"// ensure the city data contains city",
							"tests[\"city data contains city\"] = first_city.city_name !== null;",
							"",
							"// ensure the city data contains image_link",
							"tests[\"city data contains image_link\"] = first_city.city_image_link !== null;",
							"",
							"// ensure the city data contains city_id",
							"tests[\"city data contains city_id\"] = first_city.id !== null;",
							"",
							"// ensure the city data contains county_id",
							"tests[\"city data contains county_id\"] = first_city.county_id !== null;",
							"",
							"// ensure the city data contains enrolled_men",
							"tests[\"city data contains high_school_graduation_rate_in_county\"] = first_city.high_school_graduation_rate_in_county !== null;",
							"",
							"// ensure the city data contains motor_vehicle_crash_deaths_in_county",
							"tests[\"city data contains motor_vehicle_crash_deaths_in_county\"] = first_city.motor_vehicle_crash_deaths_in_county !== null;",
							"",
							"// ensure the city data contains people_with_college_education_in_county",
							"tests[\"city data contains people_with_college_education_in_county\"] = first_city.people_with_college_education_in_county !== null;",
							"",
							"// ensure the city data contains population_in_county",
							"tests[\"city data contains population_in_county\"] = first_city.population_in_county !== null;",
							"",
							"// ensure the city data contains city_type",
							"tests[\"city data contains city_type\"] = first_city.city_type !== null;",
							"",
							"// ensure the city data contains primary_care_physicians_in_county",
							"tests[\"city data contains primary_care_physicians_in_county\"] = first_city.primary_care_physicians_in_county !== null;",
							"",
							"// ensure the city data contains county_name",
							"tests[\"city data contains county_name\"] = first_city.county_name !== null;",
							"",
							"// ensure the city data contains violent_crime_in_county",
							"tests[\"city data contains violent_crime_in_county\"] = first_city.violent_crime_in_county !== null;",
							"",
							"// ensure the city data contains median_household_income_in_county",
							"tests[\"city data contains median_household_income_in_county\"] = first_city.median_household_income_in_county !== null;",
							"",
							"// ensure the city data contains survey_year_in_county",
							"tests[\"city data contains survey_year_in_county\"] = first_city.survey_year_in_county!== null;",
							"",
							"// ensure the city data contains top_majors",
							"tests[\"city data contains universities_in_city\"] = first_city.universities_in_city !== null;",
							"unis = first_city.universities_in_city;",
							"",
							"tests[\"city data contains atleast one city\"] = unis !== null;",
							"",
							"",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://api.majorpotential.me/cities",
					"protocol": "http",
					"host": [
						"api",
						"majorpotential",
						"me"
					],
					"path": [
						"cities"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Test single major api call",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ea31ab35-f21c-442b-822b-612986b29758",
						"type": "text/javascript",
						"exec": [
							"// ensure healthy response code",
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"// parse the response object",
							"var response = JSON.parse(responseBody);",
							"",
							"var city_list = response.records;",
							"",
							"var total_city = response.totalCount;",
							"",
							"var first_city = city_list[0];",
							"",
							"var last_city = city_list[total_city - 1];",
							"",
							"tests[\"test all the data is showing up\"] = last_city !== null;",
							"",
							"// ensure the city data contains name",
							"tests[\"city data contains name\"] = first_city.city_name !== null;",
							"",
							"// ensure the city data contains city",
							"tests[\"city data contains city\"] = first_city.city_name !== null;",
							"",
							"// ensure the city data contains image_link",
							"tests[\"city data contains image_link\"] = first_city.city_image_link !== null;",
							"",
							"// ensure the city data contains city_id",
							"tests[\"city data contains city_id\"] = first_city.id !== null;",
							"",
							"// ensure the city data contains county_id",
							"tests[\"city data contains county_id\"] = first_city.county_id !== null;",
							"",
							"// ensure the city data contains enrolled_men",
							"tests[\"city data contains high_school_graduation_rate_in_county\"] = first_city.high_school_graduation_rate_in_county !== null;",
							"",
							"// ensure the city data contains motor_vehicle_crash_deaths_in_county",
							"tests[\"city data contains motor_vehicle_crash_deaths_in_county\"] = first_city.motor_vehicle_crash_deaths_in_county !== null;",
							"",
							"// ensure the city data contains people_with_college_education_in_county",
							"tests[\"city data contains people_with_college_education_in_county\"] = first_city.people_with_college_education_in_county !== null;",
							"",
							"// ensure the city data contains population_in_county",
							"tests[\"city data contains population_in_county\"] = first_city.population_in_county !== null;",
							"",
							"// ensure the city data contains city_type",
							"tests[\"city data contains city_type\"] = first_city.city_type !== null;",
							"",
							"// ensure the city data contains primary_care_physicians_in_county",
							"tests[\"city data contains primary_care_physicians_in_county\"] = first_city.primary_care_physicians_in_county !== null;",
							"",
							"// ensure the city data contains county_name",
							"tests[\"city data contains county_name\"] = first_city.county_name !== null;",
							"",
							"// ensure the city data contains violent_crime_in_county",
							"tests[\"city data contains violent_crime_in_county\"] = first_city.violent_crime_in_county !== null;",
							"",
							"// ensure the city data contains median_household_income_in_county",
							"tests[\"city data contains median_household_income_in_county\"] = first_city.median_household_income_in_county !== null;",
							"",
							"// ensure the city data contains survey_year_in_county",
							"tests[\"city data contains survey_year_in_county\"] = first_city.survey_year_in_county!== null;",
							"",
							"// ensure the city data contains top_majors",
							"tests[\"city data contains universities_in_city\"] = first_city.universities_in_city !== null;",
							"unis = first_city.universities_in_city;",
							"",
							"tests[\"city data contains atleast one city\"] = unis !== null;",
							"",
							"",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://api.majorpotential.me/cities",
					"protocol": "http",
					"host": [
						"api",
						"majorpotential",
						"me"
					],
					"path": [
						"cities"
					]
				},
				"description": ""
			},
			"response": []
		}
	]
}