{
	"info": {
		"name": "MajorPotential-API-Tests",
		"_postman_id": "d6952cd1-c6e4-492e-ade3-a18a1eb6b5ba",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Test all universities api call",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7dcde714-aefc-429f-9c56-e403fa49658a",
						"type": "text/javascript",
						"exec": [
							"// ensure healthy response code",
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"// parse the response object",
							"var response = JSON.parse(responseBody);",
							"",
							"var uni_list = response.records;",
							"",
							"var total_uni = response.totalCount;",
							"",
							"var first_uni = uni_list[0];",
							"",
							"var last_uni = uni_list[total_uni - 1];",
							"",
							"// ensure the first university exits",
							"tests[\"University the first university exists\"] = last_uni !== null;",
							"",
							"// ensure the last university exits ",
							"tests[\"University the last university exists\"] = last_uni !== null;",
							"",
							"// ensure the university data contains name",
							"tests[\"University data contains name\"] = first_uni.name !== null;",
							"",
							"// ensure the university data contains city",
							"tests[\"University data contains city\"] = first_uni.city !== null;",
							"",
							"// ensure the university data contains image_link",
							"tests[\"University data contains image_link\"] = first_uni.image_link !== null;",
							"",
							"// ensure the university data contains city_id",
							"tests[\"University data contains city_id\"] = first_uni.city_id !== null;",
							"",
							"// ensure the university data contains enrolled_men",
							"tests[\"University data contains enrolled_men\"] = first_uni.enrolled_men !== null;",
							"",
							"// ensure the university data contains enrolled_women",
							"tests[\"University data contains enrolled_women\"] = first_uni.enrolled_women !== null;",
							"",
							"// ensure the university data contains id",
							"tests[\"University data contains id\"] = first_uni.id !== null;",
							"",
							"// ensure the university data contains id",
							"tests[\"University data contains state\"] = first_uni.state !== null;",
							"",
							"// ensure the university data contains website",
							"tests[\"University data contains website\"] = first_uni.website !== null;",
							"",
							"// ensure the university data contains uni_type",
							"tests[\"University data contains uni_type\"] = first_uni.uni_type !== null;",
							"",
							"// ensure the university data contains oos_tuition",
							"tests[\"University data contains oos_tuition\"] = first_uni.oos_tuition !== null;",
							"",
							"// ensure the university data contains demographics_asian",
							"tests[\"University data contains demographics_asian\"] = first_uni.demographics_asian !== null;",
							"",
							"// ensure the university data contains demographics_black",
							"tests[\"University data contains demographics_black\"] = first_uni.demographics_black !== null;",
							"",
							"// ensure the university data contains survey_year",
							"tests[\"University data contains survey_year\"] = first_uni.survey_year !== null;",
							"",
							"// ensure the university data contains top_majors",
							"tests[\"University data contains top_majors\"] = first_uni.top_majors !== null;",
							"majors = first_uni.top_majors;",
							"",
							"// ensure the university data contains 5 top_majors",
							"tests[\"University data contains 5 top_majors\"] = Object.keys(majors).length === 5;",
							"",
							"// ensure the university data contains latitude",
							"tests[\"University data contains latitude\"] = first_uni.latitude !== null;",
							"",
							"// ensure the university data contains longitude",
							"tests[\"University data contains longitude\"] = first_uni.longitude !== null;",
							"",
							"",
							"",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://api.majorpotential.me/universities",
					"protocol": "http",
					"host": [
						"api",
						"majorpotential",
						"me"
					],
					"path": [
						"universities"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Test single university api call Success",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e7820746-4f12-4afa-9604-cc449f954e4e",
						"type": "text/javascript",
						"exec": [
							"// ensure healthy response code",
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"// parse the response object",
							"var response = JSON.parse(responseBody);",
							"",
							"var first_uni = response;",
							"",
							"// ensure the university data contains name",
							"tests[\"University data contains name\"] = first_uni.name !== null;",
							"",
							"// ensure the university data contains city",
							"tests[\"University data contains city\"] = first_uni.city !== null;",
							"",
							"// ensure the university data contains image_link",
							"tests[\"University data contains image_link\"] = first_uni.image_link !== null;",
							"",
							"// ensure the university data contains city_id",
							"tests[\"University data contains city_id\"] = first_uni.city_id !== null;",
							"",
							"// ensure the university data contains enrolled_men",
							"tests[\"University data contains enrolled_men\"] = first_uni.enrolled_men !== null;",
							"",
							"// ensure the university data contains enrolled_women",
							"tests[\"University data contains enrolled_women\"] = first_uni.enrolled_women !== null;",
							"",
							"// ensure the university data contains id",
							"tests[\"University data contains id\"] = first_uni.id !== null;",
							"",
							"// ensure the university data contains id",
							"tests[\"University data contains state\"] = first_uni.state !== null;",
							"",
							"// ensure the university data contains website",
							"tests[\"University data contains website\"] = first_uni.website !== null;",
							"",
							"// ensure the university data contains uni_type",
							"tests[\"University data contains uni_type\"] = first_uni.uni_type !== null;",
							"",
							"// ensure the university data contains oos_tuition",
							"tests[\"University data contains oos_tuition\"] = first_uni.oos_tuition !== null;",
							"",
							"// ensure the university data contains demographics_asian",
							"tests[\"University data contains demographics_asian\"] = first_uni.demographics_asian !== null;",
							"",
							"// ensure the university data contains demographics_black",
							"tests[\"University data contains demographics_black\"] = first_uni.demographics_black !== null;",
							"",
							"// ensure the university data contains survey_year",
							"tests[\"University data contains survey_year\"] = first_uni.survey_year !== null;",
							"",
							"// ensure the university data contains top_majors",
							"tests[\"University data contains top_majors\"] = first_uni.majors !== null;",
							"majors = first_uni.majors;",
							"",
							"// ensure the university data contains 5 top_majors",
							"tests[\"University data contains 5 top_majors\"] = Object.keys(majors).length === 5;",
							"",
							"",
							"",
							"",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://api.majorpotential.me/universities/482228",
					"protocol": "http",
					"host": [
						"api",
						"majorpotential",
						"me"
					],
					"path": [
						"universities",
						"482228"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Test single university api failure",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "33a94548-02f7-4dad-bbd9-d0b08ce0886e",
						"type": "text/javascript",
						"exec": [
							"// ensure healthy response code",
							"tests[\"Error Status code is not 200\"] = responseCode.code !== 200;",
							"",
							"",
							"",
							"",
							"",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://api.majorpotential.me/universities/2",
					"protocol": "http",
					"host": [
						"api",
						"majorpotential",
						"me"
					],
					"path": [
						"universities",
						"2"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Test universiteis_limited api call",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5364ec0c-2056-4655-89b1-45173c5425e3",
						"type": "text/javascript",
						"exec": [
							"// ensure healthy response code",
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"// parse the response object",
							"var response = JSON.parse(responseBody);",
							"",
							"var uni_list = response.records;",
							"",
							"var total_uni = response.totalCount;",
							"",
							"var first_uni = uni_list[0];",
							"",
							"var last_uni = uni_list[total_uni - 1];",
							"",
							"// ensure the first university data contains name",
							"tests[\"first University data contains name\"] = first_uni.name !== null;",
							"",
							"// ensure the first university data contains image_link",
							"tests[\"first University data contains image_link\"] = first_uni.image_link !== null;",
							"",
							"// ensure the first university data contains id",
							"tests[\"first University data contains id\"] = first_uni.id !== null;",
							"",
							"// ensure the last university data contains name",
							"tests[\"last University data contains name\"] = last_uni.name !== null;",
							"",
							"// ensure the last university data contains image_link",
							"tests[\"last University data contains image_link\"] = last_uni.image_link !== null;",
							"",
							"// ensure the last university data contains id",
							"tests[\"last University data contains id\"] = last_uni.id !== null;",
							"",
							"",
							"",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://api.majorpotential.me/universities_limited",
					"protocol": "http",
					"host": [
						"api",
						"majorpotential",
						"me"
					],
					"path": [
						"universities_limited"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Test all cities api call",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "44a32c0a-8777-467b-ba45-7745078bac1f",
						"type": "text/javascript",
						"exec": [
							"// ensure healthy response code",
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"// parse the response object",
							"var response = JSON.parse(responseBody);",
							"",
							"var city_list = response.records;",
							"",
							"var total_city = response.totalCount;",
							"",
							"var first_city = city_list[0];",
							"",
							"var last_city = city_list[total_city - 1];",
							"",
							"tests[\"test all the data is showing up\"] = last_city !== null;",
							"",
							"// ensure the city data contains name",
							"tests[\"city data contains name\"] = first_city.city_name !== null;",
							"",
							"// ensure the city data contains image_link",
							"tests[\"city data contains image_link\"] = first_city.city_image_link !== null;",
							"",
							"// ensure the city data contains city_id",
							"tests[\"city data contains city_id\"] = first_city.id !== null;",
							"",
							"// ensure the city data contains county_id",
							"tests[\"city data contains county_id\"] = first_city.county_id !== null;",
							"",
							"// ensure the city data contains enrolled_men",
							"tests[\"city data contains high_school_graduation_rate_in_county\"] = first_city.high_school_graduation_rate_in_county !== null;",
							"",
							"// ensure the city data contains motor_vehicle_crash_deaths_in_county",
							"tests[\"city data contains motor_vehicle_crash_deaths_in_county\"] = first_city.motor_vehicle_crash_deaths_in_county !== null;",
							"",
							"// ensure the city data contains people_with_college_education_in_county",
							"tests[\"city data contains people_with_college_education_in_county\"] = first_city.people_with_college_education_in_county !== null;",
							"",
							"// ensure the city data contains population_in_county",
							"tests[\"city data contains population_in_county\"] = first_city.population_in_county !== null;",
							"",
							"// ensure the city data contains city_type",
							"tests[\"city data contains city_type\"] = first_city.city_type !== null;",
							"",
							"// ensure the city data contains primary_care_physicians_in_county",
							"tests[\"city data contains primary_care_physicians_in_county\"] = first_city.primary_care_physicians_in_county !== null;",
							"",
							"// ensure the city data contains county_name",
							"tests[\"city data contains county_name\"] = first_city.county_name !== null;",
							"",
							"// ensure the city data contains violent_crime_in_county",
							"tests[\"city data contains violent_crime_in_county\"] = first_city.violent_crime_in_county !== null;",
							"",
							"// ensure the city data contains median_household_income_in_county",
							"tests[\"city data contains median_household_income_in_county\"] = first_city.median_household_income_in_county !== null;",
							"",
							"// ensure the city data contains survey_year_in_county",
							"tests[\"city data contains survey_year_in_county\"] = first_city.survey_year_in_county!== null;",
							"",
							"// ensure the city data contains top_majors",
							"tests[\"city data contains universities_in_city\"] = first_city.universities_in_city !== null;",
							"unis = first_city.universities_in_city;",
							"",
							"tests[\"city data contains atleast one city\"] = unis !== null;",
							"",
							"",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://api.majorpotential.me/cities",
					"protocol": "http",
					"host": [
						"api",
						"majorpotential",
						"me"
					],
					"path": [
						"cities"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Test cities limited api call",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "077a4b9c-1af2-468f-906b-e9d5cec8f8a1",
						"type": "text/javascript",
						"exec": [
							"// ensure healthy response code",
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"// parse the response object",
							"var response = JSON.parse(responseBody);",
							"",
							"var city_list = response.records;",
							"",
							"var total_city = response.totalCount;",
							"",
							"var first_city = city_list[0];",
							"",
							"var last_city = city_list[total_city - 1];",
							"",
							"tests[\"test all the data is showing up\"] = last_city !== null;",
							"",
							"// ensure the city data contains name",
							"tests[\"city data contains name\"] = first_city.city_name !== null;",
							"",
							"// ensure the city data contains image_link",
							"tests[\"city data contains image_link\"] = first_city.city_image_link !== null;",
							"",
							"// ensure the city data contains city_id",
							"tests[\"city data contains city_id\"] = first_city.id !== null;",
							"",
							"",
							"",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://api.majorpotential.me/cities_limited",
					"protocol": "http",
					"host": [
						"api",
						"majorpotential",
						"me"
					],
					"path": [
						"cities_limited"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Test single city api call Success",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d85ca25e-46e2-4d18-8ae3-254222766a82",
						"type": "text/javascript",
						"exec": [
							"// ensure healthy response code",
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"// parse the response object",
							"var response = JSON.parse(responseBody);",
							"",
							"var first_city = response;",
							"",
							"// ensure the city data contains name",
							"tests[\"city data contains name\"] = first_city.city_name !== null;",
							"",
							"// ensure the city data contains city",
							"tests[\"city data contains city\"] = first_city.city_name !== null;",
							"",
							"// ensure the city data contains image_link",
							"tests[\"city data contains image_link\"] = first_city.city_image_link !== null;",
							"",
							"// ensure the city data contains city_id",
							"tests[\"city data contains city_id\"] = first_city.id !== null;",
							"",
							"// ensure the city data contains county_id",
							"tests[\"city data contains county_id\"] = first_city.county_id !== null;",
							"",
							"// ensure the city data contains enrolled_men",
							"tests[\"city data contains high_school_graduation_rate_in_county\"] = first_city.high_school_graduation_rate_in_county !== null;",
							"",
							"// ensure the city data contains motor_vehicle_crash_deaths_in_county",
							"tests[\"city data contains motor_vehicle_crash_deaths_in_county\"] = first_city.motor_vehicle_crash_deaths_in_county !== null;",
							"",
							"// ensure the city data contains people_with_college_education_in_county",
							"tests[\"city data contains people_with_college_education_in_county\"] = first_city.people_with_college_education_in_county !== null;",
							"",
							"// ensure the city data contains population_in_county",
							"tests[\"city data contains population_in_county\"] = first_city.population_in_county !== null;",
							"",
							"// ensure the city data contains city_type",
							"tests[\"city data contains city_type\"] = first_city.city_type !== null;",
							"",
							"// ensure the city data contains primary_care_physicians_in_county",
							"tests[\"city data contains primary_care_physicians_in_county\"] = first_city.primary_care_physicians_in_county !== null;",
							"",
							"// ensure the city data contains county_name",
							"tests[\"city data contains county_name\"] = first_city.county_name !== null;",
							"",
							"// ensure the city data contains violent_crime_in_county",
							"tests[\"city data contains violent_crime_in_county\"] = first_city.violent_crime_in_county !== null;",
							"",
							"// ensure the city data contains median_household_income_in_county",
							"tests[\"city data contains median_household_income_in_county\"] = first_city.median_household_income_in_county !== null;",
							"",
							"// ensure the city data contains survey_year_in_county",
							"tests[\"city data contains survey_year_in_county\"] = first_city.survey_year_in_county!== null;",
							"",
							"// ensure the city data contains top_majors",
							"tests[\"city data contains top_majors\"] = first_city.top_grad_majors !== null;",
							"majors = first_city.top_grad_majors;",
							"tests[\"city data contains 5 top_majors\"] = majors.length === 5;",
							"",
							"// ensure the city data contains top universities",
							"tests[\"city data contains top_majors\"] = first_city.top_grad_majors !== null;",
							"majors = first_city.top_grad_majors;",
							"tests[\"city data contains 5 top_majors\"] = Object.keys(majors).length === 5;",
							"",
							"",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://api.majorpotential.me/cities/31000US38540",
					"protocol": "http",
					"host": [
						"api",
						"majorpotential",
						"me"
					],
					"path": [
						"cities",
						"31000US38540"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Test single city api failure",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d85ca25e-46e2-4d18-8ae3-254222766a82",
						"type": "text/javascript",
						"exec": [
							"// ensure healthy response code",
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"// parse the response object",
							"var response = JSON.parse(responseBody);",
							"",
							"var first_city = response;",
							"",
							"// ensure the city data contains name",
							"tests[\"city data contains name\"] = first_city.city_name !== null;",
							"",
							"// ensure the city data contains city",
							"tests[\"city data contains city\"] = first_city.city_name !== null;",
							"",
							"// ensure the city data contains image_link",
							"tests[\"city data contains image_link\"] = first_city.city_image_link !== null;",
							"",
							"// ensure the city data contains city_id",
							"tests[\"city data contains city_id\"] = first_city.id !== null;",
							"",
							"// ensure the city data contains county_id",
							"tests[\"city data contains county_id\"] = first_city.county_id !== null;",
							"",
							"// ensure the city data contains enrolled_men",
							"tests[\"city data contains high_school_graduation_rate_in_county\"] = first_city.high_school_graduation_rate_in_county !== null;",
							"",
							"// ensure the city data contains motor_vehicle_crash_deaths_in_county",
							"tests[\"city data contains motor_vehicle_crash_deaths_in_county\"] = first_city.motor_vehicle_crash_deaths_in_county !== null;",
							"",
							"// ensure the city data contains people_with_college_education_in_county",
							"tests[\"city data contains people_with_college_education_in_county\"] = first_city.people_with_college_education_in_county !== null;",
							"",
							"// ensure the city data contains population_in_county",
							"tests[\"city data contains population_in_county\"] = first_city.population_in_county !== null;",
							"",
							"// ensure the city data contains city_type",
							"tests[\"city data contains city_type\"] = first_city.city_type !== null;",
							"",
							"// ensure the city data contains primary_care_physicians_in_county",
							"tests[\"city data contains primary_care_physicians_in_county\"] = first_city.primary_care_physicians_in_county !== null;",
							"",
							"// ensure the city data contains county_name",
							"tests[\"city data contains county_name\"] = first_city.county_name !== null;",
							"",
							"// ensure the city data contains violent_crime_in_county",
							"tests[\"city data contains violent_crime_in_county\"] = first_city.violent_crime_in_county !== null;",
							"",
							"// ensure the city data contains median_household_income_in_county",
							"tests[\"city data contains median_household_income_in_county\"] = first_city.median_household_income_in_county !== null;",
							"",
							"// ensure the city data contains survey_year_in_county",
							"tests[\"city data contains survey_year_in_county\"] = first_city.survey_year_in_county!== null;",
							"",
							"// ensure the city data contains top_majors",
							"tests[\"city data contains top_majors\"] = first_city.top_grad_majors !== null;",
							"majors = first_city.top_grad_majors;",
							"tests[\"city data contains 5 top_majors\"] = majors.length === 5;",
							"",
							"// ensure the city data contains top universities",
							"tests[\"city data contains top_majors\"] = first_city.top_grad_majors !== null;",
							"majors = first_city.top_grad_majors;",
							"tests[\"city data contains 5 top_majors\"] = Object.keys(majors).length === 5;",
							"",
							"",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://api.majorpotential.me/cities/31000US38540",
					"protocol": "http",
					"host": [
						"api",
						"majorpotential",
						"me"
					],
					"path": [
						"cities",
						"31000US38540"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Test all majors api call",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d6fb25cf-fc48-41cc-aee3-6b0ed3342ddd",
						"type": "text/javascript",
						"exec": [
							"// ensure healthy response code",
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"// parse the response object",
							"var response = JSON.parse(responseBody);",
							"",
							"var major_list = response.records;",
							"",
							"var total_major = response.totalCount;",
							"",
							"var first_major = major_list[0];",
							"",
							"var last_major = major_list[total_major - 1];",
							"",
							"tests[\"test all the data is showing up\"] = last_major !== null;",
							"",
							"// ensure the major data contains name",
							"tests[\"major data contains average_age_work_force\"] = first_major.average_age_work_force !== null;",
							"",
							"// ensure the major data contains average_wage",
							"tests[\"major data contains average_wage\"] = first_major.average_wage !== null;",
							"",
							"// ensure the major data contains image_link",
							"tests[\"major data contains image_link\"] = first_major.major_image_link !== null;",
							"",
							"// ensure the major data contains id",
							"tests[\"major data contains major_id\"] = first_major.id !== null;",
							"",
							"// ensure the major data contains is_stem",
							"tests[\"major data contains is_stem\"] = first_major.is_stem !== null;",
							"",
							"// ensure the major data contains name",
							"tests[\"major data contains name\"] = first_major.name !== null;",
							"",
							"// ensure the major data contains total_degrees_awarded_in_2015",
							"tests[\"major data contains total_degrees_awarded_in_2015\"] = first_major.total_degrees_awarded_in_2015 !== null;",
							"",
							"// ensure the major data contains total_people_in_work_foce",
							"tests[\"major data contains total_people_in_work_foce\"] = first_major.total_people_in_work_foce !== null;",
							"",
							"// ensure the major data contains wage_growth_rate",
							"tests[\"major data contains wage_growth_rate\"] = first_major.wage_growth_rate !== null;",
							"",
							"// ensure the major data contains cities",
							"tests[\"major data contains cities_high_graduates_2015\"] = first_major.cities_high_graduates_2015 !== null;",
							"cities = first_major.cities_high_graduates_2015;",
							"",
							"tests[\"major data contains atleast one major\"] = cities.length === 5;",
							"",
							"// ensure the major data contains universities_high_graduates_2015",
							"tests[\"major data contains universities_high_graduates_2015\"] = first_major.universities_high_graduates_2015 !== null;",
							"unis = first_major.universities_high_graduates_2015;",
							"",
							"tests[\"major data contains atleast one major\"] = unis.length === 5;",
							"",
							"",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://api.majorpotential.me/majors",
					"protocol": "http",
					"host": [
						"api",
						"majorpotential",
						"me"
					],
					"path": [
						"majors"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Test all majors limited",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "fdaca761-653a-4012-a9e5-f088720f3ca2",
						"type": "text/javascript",
						"exec": [
							"// ensure healthy response code",
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"// parse the response object",
							"var response = JSON.parse(responseBody);",
							"",
							"var major_list = response.records;",
							"",
							"var total_major = response.totalCount;",
							"",
							"var first_major = major_list[0];",
							"",
							"var last_major = major_list[total_major - 1];",
							"",
							"tests[\"test all the data is showing up\"] = last_major !== null;",
							"",
							"",
							"// ensure the major data contains image_link",
							"tests[\"major data contains image_link\"] = first_major.major_image_link !== null;",
							"",
							"// ensure the major data contains id",
							"tests[\"major data contains major_id\"] = first_major.id !== null;",
							"",
							"// ensure the major data contains name",
							"tests[\"major data contains name\"] = first_major.name !== null;",
							"",
							"",
							"",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://api.majorpotential.me/majors_limited",
					"protocol": "http",
					"host": [
						"api",
						"majorpotential",
						"me"
					],
					"path": [
						"majors_limited"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Test single major api call Success",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "68879db1-4c75-46db-a2f5-4fa0c5cd08a6",
						"type": "text/javascript",
						"exec": [
							"// ensure healthy response code",
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"// parse the response object",
							"var response = JSON.parse(responseBody);",
							"",
							"var first_major = response;",
							"",
							"// ensure the major data contains name",
							"tests[\"major data contains average_age_work_force\"] = first_major.average_age_work_force !== null;",
							"",
							"// ensure the major data contains average_wage",
							"tests[\"major data contains average_wage\"] = first_major.average_wage !== null;",
							"",
							"// ensure the major data contains image_link",
							"tests[\"major data contains image_link\"] = first_major.major_image_link !== null;",
							"",
							"// ensure the major data contains id",
							"tests[\"major data contains major_id\"] = first_major.id !== null;",
							"",
							"// ensure the major data contains is_stem",
							"tests[\"major data contains is_stem\"] = first_major.is_stem !== null;",
							"",
							"// ensure the major data contains name",
							"tests[\"major data contains name\"] = first_major.name !== null;",
							"",
							"// ensure the major data contains total_degrees_awarded_in_2015",
							"tests[\"major data contains total_degrees_awarded_in_2015\"] = first_major.total_degrees_awarded_in_2015 !== null;",
							"",
							"// ensure the major data contains total_people_in_work_foce",
							"tests[\"major data contains total_people_in_work_foce\"] = first_major.total_people_in_work_foce !== null;",
							"",
							"// ensure the major data contains wage_growth_rate",
							"tests[\"major data contains wage_growth_rate\"] = first_major.wage_growth_rate !== null;",
							"",
							"// ensure the major data contains cities",
							"tests[\"major data contains cities_high_graduates_2015\"] = first_major.cities_high_graduates_2015 !== null;",
							"cities = first_major.cities_high_graduates_2015;",
							"",
							"tests[\"major data contains atleast one major\"] = cities.length === 5;",
							"",
							"// ensure the major data contains universities_high_graduates_2015",
							"tests[\"major data contains universities_high_graduates_2015\"] = first_major.universities_high_graduates_2015 !== null;",
							"unis = first_major.universities_high_graduates_2015;",
							"",
							"tests[\"major data contains atleast one major\"] = unis.length === 5;",
							"",
							"",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://api.majorpotential.me/majors/0101",
					"protocol": "http",
					"host": [
						"api",
						"majorpotential",
						"me"
					],
					"path": [
						"majors",
						"0101"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Test single major api failure",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "68879db1-4c75-46db-a2f5-4fa0c5cd08a6",
						"type": "text/javascript",
						"exec": [
							"// ensure healthy response code",
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"// parse the response object",
							"var response = JSON.parse(responseBody);",
							"",
							"var first_major = response;",
							"",
							"// ensure the major data contains name",
							"tests[\"major data contains average_age_work_force\"] = first_major.average_age_work_force !== null;",
							"",
							"// ensure the major data contains average_wage",
							"tests[\"major data contains average_wage\"] = first_major.average_wage !== null;",
							"",
							"// ensure the major data contains image_link",
							"tests[\"major data contains image_link\"] = first_major.major_image_link !== null;",
							"",
							"// ensure the major data contains id",
							"tests[\"major data contains major_id\"] = first_major.id !== null;",
							"",
							"// ensure the major data contains is_stem",
							"tests[\"major data contains is_stem\"] = first_major.is_stem !== null;",
							"",
							"// ensure the major data contains name",
							"tests[\"major data contains name\"] = first_major.name !== null;",
							"",
							"// ensure the major data contains total_degrees_awarded_in_2015",
							"tests[\"major data contains total_degrees_awarded_in_2015\"] = first_major.total_degrees_awarded_in_2015 !== null;",
							"",
							"// ensure the major data contains total_people_in_work_foce",
							"tests[\"major data contains total_people_in_work_foce\"] = first_major.total_people_in_work_foce !== null;",
							"",
							"// ensure the major data contains wage_growth_rate",
							"tests[\"major data contains wage_growth_rate\"] = first_major.wage_growth_rate !== null;",
							"",
							"// ensure the major data contains cities",
							"tests[\"major data contains cities_high_graduates_2015\"] = first_major.cities_high_graduates_2015 !== null;",
							"cities = first_major.cities_high_graduates_2015;",
							"",
							"tests[\"major data contains atleast one major\"] = cities.length === 5;",
							"",
							"// ensure the major data contains universities_high_graduates_2015",
							"tests[\"major data contains universities_high_graduates_2015\"] = first_major.universities_high_graduates_2015 !== null;",
							"unis = first_major.universities_high_graduates_2015;",
							"",
							"tests[\"major data contains atleast one major\"] = unis.length === 5;",
							"",
							"",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://api.majorpotential.me/majors/0101",
					"protocol": "http",
					"host": [
						"api",
						"majorpotential",
						"me"
					],
					"path": [
						"majors",
						"0101"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Test error - unknown model",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "68879db1-4c75-46db-a2f5-4fa0c5cd08a6",
						"type": "text/javascript",
						"exec": [
							"// ensure healthy response code",
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"// parse the response object",
							"var response = JSON.parse(responseBody);",
							"",
							"var first_major = response;",
							"",
							"// ensure the major data contains name",
							"tests[\"major data contains average_age_work_force\"] = first_major.average_age_work_force !== null;",
							"",
							"// ensure the major data contains average_wage",
							"tests[\"major data contains average_wage\"] = first_major.average_wage !== null;",
							"",
							"// ensure the major data contains image_link",
							"tests[\"major data contains image_link\"] = first_major.major_image_link !== null;",
							"",
							"// ensure the major data contains id",
							"tests[\"major data contains major_id\"] = first_major.id !== null;",
							"",
							"// ensure the major data contains is_stem",
							"tests[\"major data contains is_stem\"] = first_major.is_stem !== null;",
							"",
							"// ensure the major data contains name",
							"tests[\"major data contains name\"] = first_major.name !== null;",
							"",
							"// ensure the major data contains total_degrees_awarded_in_2015",
							"tests[\"major data contains total_degrees_awarded_in_2015\"] = first_major.total_degrees_awarded_in_2015 !== null;",
							"",
							"// ensure the major data contains total_people_in_work_foce",
							"tests[\"major data contains total_people_in_work_foce\"] = first_major.total_people_in_work_foce !== null;",
							"",
							"// ensure the major data contains wage_growth_rate",
							"tests[\"major data contains wage_growth_rate\"] = first_major.wage_growth_rate !== null;",
							"",
							"// ensure the major data contains cities",
							"tests[\"major data contains cities_high_graduates_2015\"] = first_major.cities_high_graduates_2015 !== null;",
							"cities = first_major.cities_high_graduates_2015;",
							"",
							"tests[\"major data contains atleast one major\"] = cities.length === 5;",
							"",
							"// ensure the major data contains universities_high_graduates_2015",
							"tests[\"major data contains universities_high_graduates_2015\"] = first_major.universities_high_graduates_2015 !== null;",
							"unis = first_major.universities_high_graduates_2015;",
							"",
							"tests[\"major data contains atleast one major\"] = unis.length === 5;",
							"",
							"",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://api.majorpotential.me/majors/0101",
					"protocol": "http",
					"host": [
						"api",
						"majorpotential",
						"me"
					],
					"path": [
						"majors",
						"0101"
					]
				},
				"description": ""
			},
			"response": []
		}
	]
}